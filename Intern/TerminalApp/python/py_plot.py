#! ./rayxvenv/bin/python3

import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
import h5py
import sys


def importOutput(filename: str):
    """
    Import output h5 format and clean data
    """
    # file will be closed when we exit from WITH scope
    with h5py.File(filename, 'r') as h5f:
        # default, Columns are hard-coded, to be changed if necessary
        dataset = h5f['data/0']
        np_dataset = np.array_split(list(dataset), len(dataset)/16)
        df = pd.DataFrame(np_dataset, columns=['Xloc', 'Yloc', 'Zloc', 'Weight', 'Xdir', 'Ydir', 'Zdir', 'Energy',
                                               'Stokes0', 'Stokes1', 'Stokes2', 'Stokes3', 'pathLength', 'order', 'lastElement', 'extraParam'])  # Change when changing vectors
        correct_order = df['extraParam'].max()  # RAY-UI order like
        # Weight column is _Decaprecated_. Due to incorrect weight assignment on dynamic tracing. TODO: Fix/Rewrite shader
        df = df[df['extraParam'] == correct_order]
    return df


def plotOutput(filename: str, title: str):
    """
    Plots output file to a matplotlib figure
    """
    #TODO: Enhance

    df = importOutput(filename)

    f = plt.figure(figsize=(10, 10))

    f.canvas.manager.set_window_title('Image Plane Footprint')
    x = df['Xloc']
    y = df['Yloc']
    plt.scatter(x, y, s=0.2, label='Ray')
    plt.xlabel('x / mm')
    plt.ylabel('y / mm')

    plt.text(plt.xlim()[1], plt.ylim()[0], "Generated by RAY-X.",
             color='grey', fontstyle='italic', fontsize='x-small', ha='right')
    plt.title(title.split('.')[0] + ' footprint')
    plt.legend(['Ray'], markerscale=4)
    plt.show()


if __name__ == '__main__':
    plotOutput('output.h5', str(sys.argv[1]))
